log_format api_main '$remote_addr - $remote_user [$time_local] "$request"'
                    '$status $body_bytes_sent "$http_referer" "$http_user_agent"'
                    '"$http_x_forwarded_for" "$api_name"';

# [Try remove this directive as this could be loaded as part of api route conf]
include /etc/nginx/upstreams/*.conf;

server {
    set $api_name -; # Start with an undefined API name, each API will update this value
    access_log /var/log/nginx/access.log api_main; # Each Server or API may also log to a separate file
   
    listen 80;
    #listen 443 ssl;
    server_name api.example.com;

    # TLS config
    #ssl_certificate      /etc/ssl/certs/api.example.com.crt;
    #ssl_certificate_key  /etc/ssl/certs/api.example.com.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.1 TLSv1.2;
    
    status_zone api.example.com;

    # [ To include API routes which exposed as endpoint ]
    include /etc/nginx/routes/*.conf;
    # Accepted mime type for this api gateway.
    include /etc/nginx/apigateway/mime.types;
    # [ Forward common request proxy headers to your upstream. ]
    include /etc/nginx/apigateway/request_headers.conf;
    # [ Forward common response proxy headers to your caller. ]
    include /etc/nginx/apigateway/response_headers.conf;
    # [ API client friendly JSON error responses ]
    include /etc/nginx/apigateway/default_errors.conf;  

    # Error responses
    error_page 404 = @400;         # Invalid paths are treated as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to the client
    default_type application/json; # If no content-type then assume JSON

}

# Enable api feature to configure nginx plus for configuration, monitoring and metrics.
server {
        # Status page is enabled on port 8080:
        listen 8080;
        access_log off;

        location /api {
            # Enable CRUD for the admin api
            api write=on;
            # directives limiting access to the API
        }

        location = /dashboard.html {
            root   /usr/share/nginx/html;
        }
        location /swagger-ui {
            root   /usr/share/nginx/html;
        }
}
